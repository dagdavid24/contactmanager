{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContactContr.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","message","showContactInfo","onShowClick","console","log","onDeleteClick","delete","t0","_this2","_this$props$contact","className","onClick","bind","style","cursor","float","color","Link","to","marginRight","Contacts","contacts_Contact","Header","href","branding","defaultProps","TextInputGroup","_ref","label","placeholder","handleChange","error","htmlFor","classnames","is-invalid","onChange","AddContact","errors","event","target","defineProperty","handleSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","onSubmit","layout_TextInputGroup","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updateContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kTAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,CACR,CACEG,GAAI,EACJqB,KAAM,WACNC,MAAO,iBACPC,MAAO,gBAET,CACEvB,GAAI,EACJqB,KAAM,YACNC,MAAO,iBACPC,MAAO,gBAET,CACEvB,GAAI,EACJqB,KAAM,WACNC,MAAO,iBACPC,MAAO,iBAIXC,SAAU,SAAA/B,GACRe,EAAKiB,SAAS,SAAAjC,GAAK,OAAID,EAAQC,EAAOC,OAxB5Ce,EAAA,OAAAb,OAAA+B,EAAA,EAAA/B,CAAAU,EAAAC,GAAAX,OAAAgC,EAAA,EAAAhC,CAAAU,EAAA,EAAAuB,IAAA,oBAAAC,MAAA,eAAAC,EAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EA6BsBC,IAAMC,IAAI,8CA7BhC,OA6BUN,EA7BVE,EAAAK,KA8BIjC,KAAKe,SAAS,CACZ5B,SAAUuC,EAAIQ,OA/BpB,wBAAAN,EAAAO,SAAAV,EAAAzB,SAAA,yBAAAoB,EAAAV,MAAAV,KAAAE,YAAA,KAAAgB,IAAA,SAAAC,MAAA,WA2CI,OACEiB,EAAAb,EAAAc,cAAC3D,EAAQiB,SAAT,CAAkBwB,MAAOnB,KAAKlB,OAC3BkB,KAAKsC,MAAMC,cA7CpB5C,EAAA,CAA8B6C,aAmDjBC,EAAW/D,EAAQ+D,iBCEjBC,6MA/Eb5D,MAAQ,CACN6D,QAAS,QACTC,iBAAiB,KAEnBC,YAAc,SAAAlC,GACZmC,QAAQC,IAAIjD,EAAKhB,MAAM6D,QAAShC,GAOhCb,EAAKiB,SAAS,CAAE6B,iBAAkB9C,EAAKhB,MAAM8D,qBAG/CI,oDAAgB,SAAAvB,EAAOnC,EAAIwB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,IAAMkB,OAAN,8CAAAzD,OAA2DF,IAFrD,OAGZwB,EAAS,CAAE9B,KAAM,iBAAkBO,QAASD,IAHhCsC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAsB,GAAAtB,EAAA,SAKZd,EAAS,CAAE9B,KAAM,iBAAkBO,QAASD,IALhC,OAOdwD,QAAQC,IAAI,WAPE,yBAAAnB,EAAAO,SAAAV,EAAAzB,KAAA,4IAUP,IAAAmD,EAAAnD,KAAAoD,EAC4BpD,KAAKsC,MAAMjD,QAAtCC,EADD8D,EACC9D,GAAIqB,EADLyC,EACKzC,KAAMC,EADXwC,EACWxC,MAAOC,EADlBuC,EACkBvC,MACjB+B,EAAoB5C,KAAKlB,MAAzB8D,gBAER,OACER,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,uBACbjB,EAAAb,EAAAc,cAAA,UAGG1B,EAAM,IACPyB,EAAAb,EAAAc,cAAA,KACEiB,QAASH,EAAKN,YAAYU,KAAKJ,EAAMxC,GACrC0C,UAAU,oBACVG,MAAO,CAAEC,OAAQ,aAEnBrB,EAAAb,EAAAc,cAAA,KACEgB,UAAU,eACVG,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDL,QAASH,EAAKH,cAAcO,KAAKJ,EAAM7D,EAAIwB,KAE7CsB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAE,gBAAArE,OAAkBF,IACxB8C,EAAAb,EAAAc,cAAA,KACEgB,UAAU,mBACVG,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPG,YAAa,YAKpBlB,EACCR,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,cACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBAAd,UAAwCzC,GACxCwB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBAAd,UAAwCxC,IAExC,eAnEI2B,aCoBPuB,mLApBX,OACE3B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAhC,EAAagC,EAAbhC,SACR,OACEiD,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,kBACZjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,gBAAhB,WADF,SAGClE,EAASO,IAAI,SAAAL,GAAO,OACnB+C,EAAAb,EAAAc,cAAC2B,EAAD,CAAS9C,IAAK7B,EAAQC,GAAID,QAASA,gBAZ5BmD,aCAjByB,EAAS,SAAA3B,GACb,OACEF,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,4DACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,KAAG6B,KAAK,IAAIb,UAAU,gBACnBf,EAAM6B,UAET/B,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,sBACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,gBADf,SAKFjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChCjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,gBADf,gBAKFjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1BjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,oBADf,eAadY,EAAOG,aAAe,CACpBD,SAAU,YAOGF,iCC3CTI,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACA5D,EAMI2D,EANJ3D,KACAQ,EAKImD,EALJnD,MACAqD,EAIIF,EAJJE,YACAxF,EAGIsF,EAHJtF,KACAyF,EAEIH,EAFJG,aACAC,EACIJ,EADJI,MAEA,OACEtC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACbjB,EAAAb,EAAAc,cAAA,SAAOsC,QAAShE,GAAO4D,GACvBnC,EAAAb,EAAAc,cAAA,SACErD,KAAMA,EACNqE,UAAWuB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACb7D,KAAMA,EACNQ,MAAOA,EACP2D,SAAUL,IAEXC,GAAStC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,oBAAoBqB,KAenDL,EAAeD,aAAe,CAC5BpF,KAAM,QAGOqF,QC+EAU,6MArHbjG,MAAQ,CACN6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPmE,OAAQ,MAGVP,aAAe,SAAAQ,GACb,IAAMtE,EAAOsE,EAAMC,OAAOvE,KAC1Bb,EAAKiB,SAAL9B,OAAAkG,EAAA,EAAAlG,CAAA,GACG0B,EAAOsE,EAAMC,OAAO/D,WAIzBiE,mDAAe,SAAA3D,EAAOX,EAAUmE,GAAjB,IAAAI,EAAA1E,EAAAC,EAAAC,EAAAyE,EAAA5D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACbmD,EAAMM,iBADOF,EAEkBvF,EAAKhB,MAA5B6B,EAFK0E,EAEL1E,KAAMC,EAFDyE,EAECzE,MAAOC,EAFRwE,EAEQxE,MAGR,KAATF,EALS,CAAAiB,EAAAE,KAAA,eAMXhC,EAAKiB,SAAS,CACZiE,OAAQ,qBAPCpD,EAAA4D,OAAA,oBAWC,KAAV3E,EAXS,CAAAe,EAAAE,KAAA,eAYXhC,EAAKiB,SAAS,CACZiE,OAAQ,sBAbCpD,EAAA4D,OAAA,oBAiBC,KAAV5E,EAjBS,CAAAgB,EAAAE,KAAA,gBAkBXhC,EAAKiB,SAAS,CACZiE,OAAQ,sBAnBCpD,EAAA4D,OAAA,yBAwBPF,EAAa,CAEjB3E,OACAC,QACAC,SA5BWe,EAAAE,KAAA,GA+BKC,IAAM0D,KACtB,6CACAH,GAjCW,QA+BP5D,EA/BOE,EAAAK,KAmCbnB,EAAS,CAAE9B,KAAM,cAAeO,QAASmC,EAAIQ,OAG7CpC,EAAKiB,SAAS,CACZJ,KAAM,GACNC,MAAO,GACPC,MAAO,GACPmE,OAAQ,KAGVlF,EAAKwC,MAAMoD,QAAQC,KAAK,KA7CX,yBAAA/D,EAAAO,SAAAV,EAAAzB,yIAgDN,IAAAmD,EAAAnD,KAAA4F,EACgC5F,KAAKlB,MAApC6B,EADDiF,EACCjF,KAAMC,EADPgF,EACOhF,MAAOC,EADd+E,EACc/E,MAAOmE,EADrBY,EACqBZ,OAE5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,eACAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QACEtD,OAAO,GACP8G,SAAU1C,EAAKiC,aAAa7B,KAAKJ,EAAMrC,IAEvCsB,EAAAb,EAAAc,cAACyD,EAAD,CACEvB,MAAM,OACN5D,KAAK,OACL6D,YAAY,gBACZrD,MAAOR,EACP8D,aAActB,EAAKsB,aACnBC,MAAOM,EAAOrE,OAEhByB,EAAAb,EAAAc,cAACyD,EAAD,CACEvB,MAAM,QACN5D,KAAK,QACL3B,KAAK,QACLwF,YAAY,iBACZrD,MAAOP,EACP6D,aAActB,EAAKsB,aACnBC,MAAOM,EAAOpE,QAEhBwB,EAAAb,EAAAc,cAACyD,EAAD,CACEvB,MAAM,QACN5D,KAAK,QACL6D,YAAY,iBACZrD,MAAON,EACP4D,aAActB,EAAKsB,aACnBC,MAAOM,EAAOnE,QAEhBuB,EAAAb,EAAAc,cAAA,SACErD,KAAK,SACLqE,UAAU,0BACVlC,MAAM,uBA1GDqB,aCJV,SAASuD,IACtB,OACE3D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aAAd,yBACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,iCACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,kBAAb,kBCLS,IAAA2C,EAAA,WACb,OACE5D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aACZjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,eAAhB,OADF,mBAGAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,qCCqCS4C,6MA1CbnH,MAAQ,CACNoH,MAAO,GACPC,KAAM,uFAEY,IAAAhD,EAAAnD,KAClBoG,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAnE,GAAI,OACRiB,EAAKpC,SAAS,CACZmF,MAAOhE,EAAKgE,MACZC,KAAMjE,EAAKiE,0CAqBV,IACCD,EAAUlG,KAAKlB,MAAfoH,MACR,OACE9D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,4BACAD,EAAAb,EAAAc,cAAA,SAAI6D,WArCO1D,aC4IJgE,6MAvIb1H,MAAQ,CACN6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPmE,OAAQ,MAmBVP,aAAe,SAAAQ,GACb,IAAMtE,EAAOsE,EAAMC,OAAOvE,KAC1Bb,EAAKiB,SAAL9B,OAAAkG,EAAA,EAAAlG,CAAA,GACG0B,EAAOsE,EAAMC,OAAO/D,WAIzBiE,mDAAe,SAAA3D,EAAOX,EAAUmE,GAAjB,IAAAI,EAAA1E,EAAAC,EAAAC,EAAA4F,EAAAnH,EAAAoC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACbmD,EAAMM,iBADOF,EAEkBvF,EAAKhB,MAA5B6B,EAFK0E,EAEL1E,KAAMC,EAFDyE,EAECzE,MAAOC,EAFRwE,EAEQxE,MAGR,KAATF,EALS,CAAAiB,EAAAE,KAAA,eAMXhC,EAAKiB,SAAS,CACZiE,OAAQ,qBAPCpD,EAAA4D,OAAA,oBAWC,KAAV3E,EAXS,CAAAe,EAAAE,KAAA,eAYXhC,EAAKiB,SAAS,CACZiE,OAAQ,sBAbCpD,EAAA4D,OAAA,oBAiBC,KAAV5E,EAjBS,CAAAgB,EAAAE,KAAA,gBAkBXhC,EAAKiB,SAAS,CACZiE,OAAQ,sBAnBCpD,EAAA4D,OAAA,yBAwBPiB,EAAgB,CACpB9F,OACAC,QACAC,SAGMvB,EAAOQ,EAAKwC,MAAMoE,MAAMC,OAAxBrH,GA9BKsC,EAAAE,KAAA,GAgCKC,IAAM6E,IAAN,8CAAApH,OAC8BF,GAC9CmH,GAlCW,QAgCP/E,EAhCOE,EAAAK,KAqCbnB,EAAS,CAAE9B,KAAM,iBAAkBO,QAASmC,EAAIQ,OAGhDpC,EAAKiB,SAAS,CACZJ,KAAM,GACNC,MAAO,GACPC,MAAO,GACPmE,OAAQ,KAGVlF,EAAKwC,MAAMoD,QAAQC,KAAK,KA/CX,yBAAA/D,EAAAO,SAAAV,EAAAzB,6QArBLV,EAAOU,KAAKsC,MAAMoE,MAAMC,OAAxBrH,YACUyC,IAAMC,IAAN,8CAAAxC,OAC8BF,WAD1CoC,SAIArC,EAAUqC,EAAIQ,KAEpBlC,KAAKe,SAAS,CACZJ,KAAMtB,EAAQsB,KACdC,MAAOvB,EAAQuB,MACfC,MAAOxB,EAAQwB,2IA6DV,IAAAsC,EAAAnD,KAAA4F,EACgC5F,KAAKlB,MAApC6B,EADDiF,EACCjF,KAAMC,EADPgF,EACOhF,MAAOC,EADd+E,EACc/E,MAAOmE,EADrBY,EACqBZ,OAE5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,gBACAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QACEtD,OAAO,GACP8G,SAAU1C,EAAKiC,aAAa7B,KAAKJ,EAAMrC,IAEvCsB,EAAAb,EAAAc,cAACyD,EAAD,CACEvB,MAAM,OACN5D,KAAK,OACL6D,YAAY,gBACZrD,MAAOR,EACP8D,aAActB,EAAKsB,aACnBC,MAAOM,EAAOrE,OAEhByB,EAAAb,EAAAc,cAACyD,EAAD,CACEvB,MAAM,QACN5D,KAAK,QACL3B,KAAK,QACLwF,YAAY,iBACZrD,MAAOP,EACP6D,aAActB,EAAKsB,aACnBC,MAAOM,EAAOpE,QAEhBwB,EAAAb,EAAAc,cAACyD,EAAD,CACEvB,MAAM,QACN5D,KAAK,QACL6D,YAAY,iBACZrD,MAAON,EACP4D,aAActB,EAAKsB,aACnBC,MAAOM,EAAOnE,QAEhBuB,EAAAb,EAAAc,cAAA,SACErD,KAAK,SACLqE,UAAU,0BACVlC,MAAM,uBA5HAqB,aCiCXqE,gMAtBX,OACEzE,EAAAb,EAAAc,cAACyE,EAAD,KACE1E,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,KACE3E,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,OACbjB,EAAAb,EAAAc,cAAC2E,EAAD,CAAQ7C,SAAS,oBACjB/B,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,KACE7E,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjC3B,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWtC,IAC5C3C,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWb,IACjDpE,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWtB,IACtC3D,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWpB,IACrC7D,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOG,UAAWrB,gBAdhBxD,cCHE8E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASf,MACvB,2DCbNgB,IAASC,OAAOvF,EAAAb,EAAAc,cAACuF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC","file":"static/js/main.13739621.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n      {\n        id: 1,\n        name: 'John Doe',\n        email: 'jdoe@gmail.com',\n        phone: '555-555-5555'\n      },\n      {\n        id: 2,\n        name: 'Karen Daw',\n        email: 'kdaw@gmail.com',\n        phone: '333-333-3333'\n      },\n      {\n        id: 3,\n        name: 'Jack Dew',\n        email: 'jdew@gmail.com',\n        phone: '888-888-8888'\n      }\n    ],\n\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({\n      contacts: res.data\n    });\n    //this way is a more asynchronous method of doing requests where we would have just done\n    // axios.get('https://jsonplaceholder.typicode.com/users')\n    // .then (\n    //   this.setState({\n    //     contacts: res.data\n    //   })\n    // );\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n  state = {\n    message: 'Hello',\n    showContactInfo: false\n  };\n  onShowClick = name => {\n    console.log(this.state.message, name);\n    // the code below can essentially be seen as an if statement like the comment\n    // if (this.state.showContactInfo) {\n    //   this.setState({ showContactInfo: false });\n    // } else {\n    //   this.setState({ showContactInfo: true });\n    // }\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n    console.log('deleted');\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {/* binding is done to make our custom function know which this we are refering to in the function itself */}\n                {/* if you dont want binding you just have to make function an arrow function then all you have to do is this.onShowClick */}\n                {name}{' '}\n                <i\n                  onClick={this.onShowClick.bind(this, name)}\n                  className=\"fas fa-angle-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-user-edit\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '16px'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <div>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-primary\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {props.branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n//this is used to ensure that if nothing is passed in the Header tag for props.branding then at least there will be a default display\nHeader.defaultProps = {\n  branding: 'This App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  handleChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={handleChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  handleChange = event => {\n    const name = event.target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  handleSubmit = async (dispatch, event) => {\n    event.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //check for errors\n    if (name === '') {\n      this.setState({\n        errors: 'Name is required'\n      });\n      return;\n    }\n    if (phone === '') {\n      this.setState({\n        errors: 'Phone is required'\n      });\n      return;\n    }\n    if (email === '') {\n      this.setState({\n        errors: 'Email is required'\n      });\n      return;\n    }\n\n    const newContact = {\n      // id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    //clear state after submission\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">ADD CONTACT</div>\n              <div className=\"card-body\">\n                <form\n                  action=\"\"\n                  onSubmit={this.handleSubmit.bind(this, dispatch)}\n                >\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    handleChange={this.handleChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    handleChange={this.handleChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    handleChange={this.handleChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                    value=\"Submit\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from 'react';\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  //   componentWillMount() {\n  //     console.log('component will mount');\n  //   }\n\n  //   componentDidUpdate() {\n  //     console.log('component did update');\n  //   }\n\n  //   componentWillUpdate() {\n  //     console.log('comp will update');\n  //   }\n\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     console.log('will receive stuff');\n  //   }\n\n  render() {\n    const { title } = this.state;\n    return (\n      <div>\n        <h1>Test Component</h1>\n        <p>{title}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    //getting the id from the url and putting the information from that id into the form\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  handleChange = event => {\n    const name = event.target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  handleSubmit = async (dispatch, event) => {\n    event.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //check for errors\n    if (name === '') {\n      this.setState({\n        errors: 'Name is required'\n      });\n      return;\n    }\n    if (phone === '') {\n      this.setState({\n        errors: 'Phone is required'\n      });\n      return;\n    }\n    if (email === '') {\n      this.setState({\n        errors: 'Email is required'\n      });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    //clear state after submission\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">EDIT CONTACT</div>\n              <div className=\"card-body\">\n                <form\n                  action=\"\"\n                  onSubmit={this.handleSubmit.bind(this, dispatch)}\n                >\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    handleChange={this.handleChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    handleChange={this.handleChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    handleChange={this.handleChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                    value=\"Submit\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContactContr';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}